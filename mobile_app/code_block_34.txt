import 'package:flutter/material.dart'; import 'package:camera/camera.dart'; import 'dart:io'; import '../services/api_service.dart'; import 'package:provider/provider.dart'; import '../providers/auth_provider.dart'; class FaceCaptureScreen extends StatefulWidget { @override _FaceCaptureScreenState createState() => _FaceCaptureScreenState(); } class _FaceCaptureScreenState extends State<FaceCaptureScreen> { CameraController? _controller; List<CameraDescription>? cameras; XFile? capturedImage; bool isInitialized = false; @override void initState() { super.initState(); initCamera(); } Future<void> initCamera() async { cameras = await availableCameras(); _controller = CameraController(cameras![1], ResolutionPreset.medium); await _controller!.initialize(); setState(() { isInitialized = true; }); } Future<void> captureAndUpload(BuildContext context) async { if (_controller != null) { capturedImage = await _controller!.takePicture(); final authProvider = Provider.of<AuthProvider>(context, listen: false); var res = await ApiService.uploadDocument( File(capturedImage!.path), 'face_biometric', authProvider.token!, authProvider.userId!, ); ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text(res['message']))); } } @override void dispose() { _controller?.dispose(); super.dispose(); } @override Widget build(BuildContext context) { if (!isInitialized) return Center(child: CircularProgressIndicator()); return Scaffold( appBar: AppBar(title: Text('Capture Face')), body: Column( children: [ AspectRatio( aspectRatio: _controller!.value.aspectRatio, child: CameraPreview(_controller!), ), SizedBox(height: 20), ElevatedButton( onPressed: () => captureAndUpload(context), child: Text('Capture & Upload'), ) ], ), ); } }